{"version":3,"sources":["../src/ui-framework.js"],"names":["Component","tagName","attributes","children","attribute","value","getAttribute","element","html","renderAttributes","renderChildren","Element","innerHTML","attributesHTML","getAttributes","push","join","childrenHTML","child","render","Symbol","iterator","i","next","length","done","Button","label","RoundedRedButton","style","component","type","document","querySelector","button","roundedRedButton","onclick"],"mappings":"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","file":"ui-framework.js","sourcesContent":["// @flow\n// use strict reste nécessaire en es6+ sauf dnas les classes et les modules\n// où il est implicite\n'use strict';\n\nclass Component {\n\n\ttagName = 'div';\n\tattributes:{} = {};\n\tchildren:Array<string|Component> = [];\n\n\t/**\n\t * Fonction permettant d'initialiser un objet littéral component.\n\t * Permet de l'initialiser avec son tagName, une liste d'attributs et des enfants.\n\t * @param  {String} tagName    Nom de la balise html à générer\n\t * @param  {Object} attributes Liste des attributs html à ajouter sous la forme de paires clé:valeur\n\t * @param  {Array}  children   Liste des enfants du composant. Chaque enfant peut être un autre component ou une String.\n\t */\n\tconstructor( tagName:string = 'div', attributes:{} = {}, children:Array<string|Component> = [] ) {\n\t\t// on utilise les valeurs par défaut d'ES6 pour les paramètres de la méthode\n\t\tthis.tagName = tagName;\n\t\tthis.attributes = attributes;\n\t\tthis.children = children;\n\t}\n\n\t/**\n\t * Récupère la valeur d'un attribut HTML d'un composant\n\t * @param {String} attribute  Clé de l'attribut à récupérer\n\t * @return {String} valeur de l'attribut demandé ou undefined si l'attribut n'exite pas\n\t * @see setComponentAttribute()\n\t */\n\tgetAttribute( attribute:string ):string {\n\t\treturn this.attributes[ attribute ];\n\t}\n\n\t// Generator function :\n\t*getAttributes() {\n\t\tfor (const attribute:string in this.attributes){\n\t\t\tyield { attribute, value: this.getAttribute( attribute ) };\n\t\t}\n\t}\n\n\t/**\n\t * Retourne le code html correspondant au Component et à ses enfants\n\t * et l'affiche éventuellement dans un élément html.\n\t * @return {String} code html généré\n\t * @see renderComponentAttributes()\n\t * @see renderComponentChildren()\n\t */\n\trender( element:?Element = null ):string {\n\t\tconst {tagName} = this;\n\n\t\tconst html:string = `<${tagName} ${this.renderAttributes()}>\n\t\t\t\t\t${this.renderChildren()}\n\t\t\t\t</${tagName}>`;\n\t\tif ( element instanceof Element ) {\n\t\t\telement.innerHTML = html;\n\t\t}\n\t\treturn html;\n\t}\n\n\t/**\n\t * Retourne le code html des attributes d'un component.\n\t * @param      {Object}    component  Le composant dont on doit rendre les attributs\n\t * @return     {String}  code html des attributs du component\n\t */\n\trenderAttributes():string {\n\t\tconst attributesHTML:Array<string> = [];\n\t\t// utilisation de la generator function *getAttributes\n\t\tfor ( const {attribute, value} of this.getAttributes() ) {\n\t\t\tattributesHTML.push( ` ${attribute}=\"${value}\"` );\n\t\t}\n\t\treturn attributesHTML.join('');\n\t}\n\n\trenderChildren():string {\n\t\tconst childrenHTML:Array<string> = [];\n\t\t// utilisation de l'iterator\n\t\t// $FlowFixMe\n\t\tfor ( const child of this ){\n\t\t\t// on utilise désormais l'opérateur instanceof avec la classe Component\n\t\t\t// plus sur que de tester si ce n'est pas une chaine pour appeler\n\t\t\t// la méthode render()\n\t\t\tchildrenHTML.push( child instanceof Component ? child.render() : child );\n\t\t}\n\t\treturn childrenHTML.join('');\n\t}\n\n\t// $FlowFixMe\n\t[Symbol.iterator]() {\n\t\treturn {\n\t\t\ti: 0,\n\t\t\tchildren: this.children,\n\t\t\tnext() {\n\t\t\t\tif (this.i >= this.children.length) {\n\t\t\t\t\treturn { done: true };\n\t\t\t\t}\n\t\t\t\treturn {value:this.children[ this.i++ ]};\n\t\t\t},\n\t\t};\n\t}\n}\n\nclass Button extends Component {\n\tconstructor( label:string = 'Ne surtout pas cliquer ici', attributes:{} = {} ) {\n\t\tsuper( 'button', attributes, [ label ] );\n\t}\n}\n\nclass RoundedRedButton extends Button {\n\tconstructor( label:string, attributes:?{} ) {\n\t\tsuper(\n\t\t\tlabel,\n\t\t\t{\n\t\t\t\t...attributes,\n\t\t\t\tstyle : 'border-radius: 5px; color: white; background-color: red'\n\t\t\t}\n\t\t);\n\t}\n}\n\nconst component:Component = new Component( 'div', { style: 'border: 1px solid black' }, [\n\tnew Component( 'h3', {}, [\n\t\t'Test du ',\n\t\tnew Component( 'strong', { style: 'color: blue' }, [ 'framework' ] ),\n\t\t' ui'\n\t] ),\n\tnew Component( 'input', { type: 'text', value: 'Ca a l\\'air de fonctionner correctement', style: 'width: 500px' } )\n] );\ncomponent.render( document.querySelector( '#component-container' ));\n\nconst button:Button = new Button( 'Ceci est un bouton' );\nbutton.render( document.querySelector( '#button-container' ));\n\nconst roundedRedButton:RoundedRedButton = new RoundedRedButton(\n\t'Ceci est un bouton rouge arrondi',\n\t{ onclick: 'alert(\\'au secours, on me clique dessus !\\')' }\n);\nroundedRedButton.render( document.querySelector( '#rounded-red-button-container' ));"]}